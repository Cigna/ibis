SET mapred.job.queue.name=ingestion;
SET mapreduce.map.memory.mb=8000;
SET mapreduce.reduce.memory.mb=16000;
SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.exec.dynamic.partition=true;
SET hive.warehouse.subdir.inherit.perms=true;

SET parquet.block.size=268435456;
SET dfs.blocksize=1000000000;
SET mapred.min.split.size=1000000000;

CREATE DATABASE IF NOT EXISTS `parquet_stage`;

DROP TABLE IF EXISTS `parquet_stage.database_test_table_test`;

CREATE TABLE `parquet_stage.database_test_table_test`(
`FAKE_COL_1` CHAR(3),
 `FAKE_COL_2` DOUBLE,
 `FAKE_COL_3` TIMESTAMP,
 `FAKE_COL_4` BIGINT,
 `FAKE_COL_5` VARCHAR(10),
 `FAKE_COL_6` TIMESTAMP,
 `FAKE_COL_7` INT,
 `FAKE_COL_8` DECIMAL(22,2),
 `FAKE_COL_9` DECIMAL(13,2),
 `FAKE_COL_10` VARCHAR(4),
 `FAKE_COL_11` VARCHAR(64000),
 `FAKE_COL_12` CHAR(2),
 `FAKE_COL_13` STRING,
 `FAKE_COL_14` STRING,
 `FAKE_COL_15` STRING,
 `FAKE_COL_16` STRING,
 `FAKE_COL_17` STRING,
 `FAKE_COL_18` STRING,
 `FAKE_COL_18_MONTH` STRING,
 `FAKE_COL_19` TIMESTAMP,
 `FAKE_COL_20` TIMESTAMP,
 `FAKE_COL_21` TIMESTAMP,
 `FAKE_COL_22` VARCHAR(2),
 `FAKE_COL_23` BIGINT,
 `FAKE_COL_24` STRING,
 `FAKE_COL_25` STRING,
 `FAKE_COL_26` STRING,
 `FAKE_COL_27` INT,
 `FAKE_COL_28` INT,
 `FAKE_COL_29` SMALLINT,
 `FAKE_COL_30` DOUBLE,
 `FAKE_COL_31` INT,
 `FAKE_COL_32` CHAR(1),
 `FAKE_COL_33` STRING,
 `FAKE_COL_34` STRING,
 `FAKE_COL_35` CHAR(2),
 `FAKE_COL_36` TIMESTAMP,
 `FAKE_COL_37` TIMESTAMP,
 `FAKE_COL_38` STRING,
 `FAKE_COL_39` STRING,
 `FAKE_COL_40` STRING,
 `FAKE_COL_41` STRING,
`ingest_timestamp` STRING)
PARTITIONED BY (incr_ingest_timestamp STRING)
STORED AS PARQUET LOCATION 'hdfs:///user/data/hdfs_test/stage/';


msck repair table `parquet_stage.database_test_table_test`;


INSERT OVERWRITE TABLE `parquet_stage.database_test_table_test` partition(incr_ingest_timestamp='20160101164756') SELECT CAST(`FAKE_COL_1` AS CHAR(3)) AS `FAKE_COL_1`,
 CAST(`FAKE_COL_2` AS DOUBLE) AS `FAKE_COL_2`,
 CAST(`FAKE_COL_3` AS TIMESTAMP) AS `FAKE_COL_3`,
 CAST(`FAKE_COL_4` AS BIGINT) AS `FAKE_COL_4`,
 CAST(`FAKE_COL_5` AS VARCHAR(10)) AS `FAKE_COL_5`,
 CAST(`FAKE_COL_6` AS TIMESTAMP) AS `FAKE_COL_6`,
 CAST(`FAKE_COL_7` AS INT) AS `FAKE_COL_7`,
 CAST(`FAKE_COL_8` AS DECIMAL(22,2)) AS `FAKE_COL_8`,
 CAST(`FAKE_COL_9` AS DECIMAL(13,2)) AS `FAKE_COL_9`,
 CAST(`FAKE_COL_10` AS VARCHAR(4)) AS `FAKE_COL_10`,
 CAST(`FAKE_COL_11` AS VARCHAR(64000)) AS `FAKE_COL_11`,
 CAST(`FAKE_COL_12` AS CHAR(2)) AS `FAKE_COL_12`,
 CAST(`FAKE_COL_13` AS STRING) AS `FAKE_COL_13`,
 CAST(`FAKE_COL_14` AS STRING) AS `FAKE_COL_14`,
 CAST(`FAKE_COL_15` AS STRING) AS `FAKE_COL_15`,
 CAST(`FAKE_COL_16` AS STRING) AS `FAKE_COL_16`,
 CAST(`FAKE_COL_17` AS STRING) AS `FAKE_COL_17`,
 CAST(`FAKE_COL_18` AS STRING) AS `FAKE_COL_18`,
 CAST(`FAKE_COL_18_MONTH` AS STRING) AS `FAKE_COL_18_MONTH`,
 CAST(`FAKE_COL_19` AS TIMESTAMP) AS `FAKE_COL_19`,
 CAST(`FAKE_COL_20` AS TIMESTAMP) AS `FAKE_COL_20`,
 CAST(`FAKE_COL_21` AS TIMESTAMP) AS `FAKE_COL_21`,
 CAST(`FAKE_COL_22` AS VARCHAR(2)) AS `FAKE_COL_22`,
 CAST(`FAKE_COL_23` AS BIGINT) AS `FAKE_COL_23`,
 CAST(`FAKE_COL_24` AS STRING) AS `FAKE_COL_24`,
 CAST(`FAKE_COL_25` AS STRING) AS `FAKE_COL_25`,
 CAST(`FAKE_COL_26` AS STRING) AS `FAKE_COL_26`,
 CAST(`FAKE_COL_27` AS INT) AS `FAKE_COL_27`,
 CAST(`FAKE_COL_28` AS INT) AS `FAKE_COL_28`,
 CAST(`FAKE_COL_29` AS SMALLINT) AS `FAKE_COL_29`,
 CAST(`FAKE_COL_30` AS DOUBLE) AS `FAKE_COL_30`,
 CAST(`FAKE_COL_31` AS INT) AS `FAKE_COL_31`,
 CAST(`FAKE_COL_32` AS CHAR(1)) AS `FAKE_COL_32`,
 CAST(`FAKE_COL_33` AS STRING) AS `FAKE_COL_33`,
 CAST(`FAKE_COL_34` AS STRING) AS `FAKE_COL_34`,
 CAST(`FAKE_COL_35` AS CHAR(2)) AS `FAKE_COL_35`,
 CAST(`FAKE_COL_36` AS TIMESTAMP) AS `FAKE_COL_36`,
 CAST(`FAKE_COL_37` AS TIMESTAMP) AS `FAKE_COL_37`,
 CAST(`FAKE_COL_38` AS STRING) AS `FAKE_COL_38`,
 CAST(`FAKE_COL_39` AS STRING) AS `FAKE_COL_39`,
 CAST(`FAKE_COL_40` AS STRING) AS `FAKE_COL_40`,
 CAST(`FAKE_COL_41` AS STRING) AS `FAKE_COL_41`,
 '2016-01-01 16:47:56' AS `ingest_timestamp`
 FROM `ingest.database_test_table_test`;

DROP TABLE `ingest.database_test_table_test`;
